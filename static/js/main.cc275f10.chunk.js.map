{"version":3,"sources":["helpers.js","api.js","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["request","url","fetch","then","response","json","catch","error","BASE_URL","Todo","onUserSelect","selectedUserId","completed","userId","title","onClick","className","classNames","type","readOnly","TodoList","state","todos","loadedTodos","query","option","handleChange","event","target","name","value","setState","filterByOption","filter","todo","filterList","prevState","toLowerCase","includes","a","data","Object","values","some","field","this","_","props","placeholder","onChange","disabled","map","key","id","React","Component","CurrentUser","selectedUserDetails","userError","handleClickClear","onReset","loadData","prevProps","selectedUser","email","phone","App","selectUserHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc275f10.chunk.js","sourcesContent":["export const request = url => (\n  fetch(url)\n    .then(response => response.json())\n    .catch(error => error)\n);\n","import { request } from './helpers';\n\nconst BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function loadTodos() {\n  return request(`${BASE_URL}/todos`)\n    .then(response => response.data.filter((todo) => {\n      if (Object.values(todo)\n        .some(field => field === null || field === '')) {\n        return false;\n      }\n\n      return todo;\n    }))\n    .then(response => response);\n}\n\nexport function loadUser(userId) {\n  return request(`${BASE_URL}/users/${userId}`);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Todo = ({ onUserSelect,\n  selectedUserId,\n  completed,\n  userId,\n  title }) => (\n    <li\n      onClick={() => onUserSelect(userId)}\n      className={classNames(`TodoList__item`, {\n        'TodoList__item--checked': completed,\n        'TodoList__item--unchecked': !completed,\n      })}\n    >\n      <label>\n        <input type=\"checkbox\" readOnly />\n        <p>{title}</p>\n      </label>\n\n      <button\n        className={classNames(`\n        TodoList__user-button button`, {\n          'TodoList__user-button--selected': userId === selectedUserId,\n        })}\n        type=\"button\"\n      >\n        User #\n        {userId}\n      </button>\n    </li>\n);\n\nTodo.propTypes = {\n  onUserSelect: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { loadTodos } from '../../api';\nimport { Todo } from '../Todo/Todo';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    todos: [],\n    loadedTodos: [],\n    query: '',\n    option: '',\n  }\n\n  async componentDidMount() {\n    const todos = await loadTodos();\n\n    this.setState({\n      todos,\n      loadedTodos: todos,\n    });\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (prevState.option !== this.state.option) {\n      this.filterByOption(this.state.option);\n    }\n\n    if (prevState.query !== this.state.query) {\n      this.filterList(this.state.query);\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  filterByOption = (option) => {\n    const { loadedTodos } = this.state;\n\n    this.setState({ query: '' })\n\n    switch (option) {\n      case 'all':\n        return this.setState({\n          todos: loadedTodos.filter(todo => todo),\n        });\n\n      case 'completed':\n        return this.setState({\n          todos: loadedTodos.filter(todo => todo.completed === true),\n        });\n\n      case 'uncompleted':\n        return this.setState({\n          todos: loadedTodos.filter(todo => todo.completed === false),\n        });\n\n      default: return false;\n    }\n  }\n\n  filterList = () => {\n    const { loadedTodos } = this.state;\n\n    this.setState((prevState) => {\n      const filtredTodos = loadedTodos.filter((todo) => {\n        const title = todo.title.toLowerCase();\n        const query = prevState.query.toLowerCase();\n\n        return title.includes(query);\n      });\n\n      return ({ todos: filtredTodos });\n    });\n  }\n\n  render() {\n    const { onUserSelect, selectedUserId } = this.props;\n    const { todos, query } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <label>\n            Search:\n            {' '}\n            {' '}\n            <input\n              type=\"text\"\n              placeholder=\"find ToDo\"\n              name=\"query\"\n              value={query}\n              onChange={this.handleChange}\n            />\n          </label>\n          <select\n            value={this.state.option}\n            name=\"option\"\n            onChange={this.handleChange}\n          >\n            <option value=\"initial\" disabled>\n              choose parameter\n            </option>\n            <option\n              value=\"completed\"\n            >\n              completed\n            </option>\n            <option value=\"uncompleted\">\n              uncompleted\n            </option>\n            <option value=\"all\">\n              all\n            </option>\n          </select>\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <Todo\n                key={todo.id}\n                onUserSelect={onUserSelect}\n                selectedUserId={selectedUserId}\n                completed={todo.completed}\n                userId={todo.userId}\n                title={todo.title}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  onUserSelect: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { loadUser } from '../../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUserDetails: [],\n    userError: false,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  handleClickClear = () => {\n    this.props.onReset(0);\n  }\n\n  async loadData() {\n    const selectedUser = await loadUser(this.props.userId);\n\n    if (selectedUser.data === null) {\n      this.setState({ userError: true });\n\n      return false;\n    }\n\n    this.setState({\n      selectedUserDetails: selectedUser.data,\n      userError: false,\n    });\n  }\n\n  render() {\n    const { userId } = this.props;\n    const { userError } = this.state;\n    const { name, email, phone } = this.state.selectedUserDetails;\n\n    return (\n\n      <>\n        {userError ? (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\"><span>Invalid User</span></h2>\n          </div>\n        )\n          : (\n            <div className=\"CurrentUser\">\n              <h2 className=\"CurrentUser__title\">\n                <span>\n                  Selected user:\n                  {userId}\n                </span>\n              </h2>\n\n              <h3 className=\"CurrentUser__name\">{name}</h3>\n              <p className=\"CurrentUser__email\">{email}</p>\n              <p className=\"CurrentUser__phone\">{phone}</p>\n            </div>\n          )\n      }\n        <button\n          type=\"button\"\n          onClick={this.handleClickClear}\n        >\n          Clear\n        </button>\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onReset: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    selectedUserId: 0,\n  };\n\n  selectUserHandler = (userId) => {\n    if (userId !== this.state.selectedUserId) {\n      this.setState({ selectedUserId: userId });\n    }\n  }\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            selectedUserId={selectedUserId}\n            onUserSelect={this.selectUserHandler}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onReset={this.selectUserHandler}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}